<launch>
  <!-- <param name="/use_sim_time" value="true"/> -->
  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />

  <arg name="limited" default="true"/>

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <!-- <include file="$(find ur10_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
    <arg name="limited" value="$(arg limited)"/>
  </include> -->

  <!-- Camera node -->
  <include file="$(find realsense2_camera)/launch/rs_rgbd_pc.launch"/>

  <!-- mocap node -->
  <node pkg="natnet_ros" type="client" name="mocap" output="screen" args="--clock"/>
    <!-- <param name="server" value="10.0.0.107"/> -->
  <!-- </node> -->
   <!--add negative negative to clock-->

  <!-- TF node -->
  <!-- <node pkg="realsense2_camera" type="tf_broadcaster.py" name="camera_tf_node" output="screen"/> -->

  <node pkg="realsense2_camera" type="transformer.py" name="camera_tf_node" output="screen"/>

  <!-- pointcloud segmentation node -->
  <!-- <node pkg="segmentation" type="segmentation_server" name="segmentation" output="screen"/> -->

  <!-- Gaze optimiser - tranfosrm objects, find target object and optimal grasp point -->
  <!-- <node pkg="ur10_moveit_config" type="gaze_optimiser.py" name="gaze_optimiser" output="screen"/> -->

  <!-- Exetucion manager/controller that controls all the services responses/requests -->
  <!-- <node pkg="ur10_moveit_config" type="controller.py" name="execution_manager" output="screen"/> -->

  <!-- Main node to control the robot and find a collision-free trajectory -->
  <!-- <node pkg="ur10_moveit_config" type="path_planner.py" name="path_planner" output="screen"/> -->


</launch>
