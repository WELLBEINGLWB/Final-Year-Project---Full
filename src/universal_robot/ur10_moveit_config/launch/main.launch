<launch>
  <!-- <param name="/use_sim_time" value="true"/> -->
  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />

  <arg name="limited" default="true"/>

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find ur10_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
    <arg name="limited" value="$(arg limited)"/>
  </include>

  <!-- Camera node -->
  <include file="$(find realsense2_camera)/launch/rs_rgbd_pc.launch"/>
  <node pkg="natnet_ros" type="client" name="mocap" output="screen" args="--clock"/>
    <!-- <param name="server" value="10.0.0.107"/>
  </node> -->
   <!--add negative negative to clock-->
  <node pkg="realsense2_camera" type="tf_broadcaster.py" name="camera_tf_node" output="screen"/>

  <!-- <node name="send_pose" pkg="ur10_moveit_config" type="send_pose.py" respawn="false" output="screen"/> -->
  <!-- rosrun natnet_ros client _server:=10.0.0.108 -->

  <!-- <include file="$(find realsense2_camera)/launch/camera_mapping.launch"/> -->
  <!-- <include file="$(find realsense2_camera)/launch/rs_rgbd_pc.launch"/> -->
  <!-- Natnet node -->
  <!-- <node pkg="natnet_ros" type="client" name="mocap" output="screen" args="clock"/> -->
  <!-- tf broadcaster node -->
  <!-- <node pkg="realsense2_camera" type="tf_broadcaster.py" name="camera_tf_node" output="screen"/> -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="mocap_to_world" args="0 0 0 0 0 0 mocap /world 100"/> -->

  <!-- <node name="send_pose" pkg="ur10_moveit_config" type="send_pose.py" respawn="false" output="screen"/> -->

  <!-- We do not have a robot connected, so publish fake joint states -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="true"/>
    <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
  </node>

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find ur10_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="true"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <include file="$(find ur10_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- If database loading was enabled, start mongodb as well -->
  <include file="$(find ur10_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)"/>

</launch>
